@use 'sass:map';
@use 'sass:math';

@use '@spike-rabbit/element-theme/src/styles/variables';

$icon-size: variables.$si-icon-font-size;
$icon-size-half: math.div($icon-size, 2);

$wizard-default-color: variables.$element-text-secondary;
$wizard-default-border-color: variables.$element-ui-2;
$wizard-active-color: variables.$element-ui-0;
$wizard-hover-color: variables.$element-ui-0-hover;
$wizard-vertical-min-inline-size: var(--wizard-vertical-min-size, 180px);
$wizard-vertical-max-inline-size: var(--wizard-vertical-max-size, initial);
$wizard-vertical-divider-border-color: variables.$element-ui-4;

:host.vertical {
  display: flex;
  flex-direction: column;
  block-size: 100%;
}

.container-steps {
  display: flex;

  .step {
    display: grid;
  }

  &:not(.vertical) {
    inline-size: 100%;
    justify-content: center;
    align-items: flex-start;
    padding-block: 0;

    .step {
      grid-template-columns: 1fr auto 1fr;
      grid-template-rows: auto auto;

      .step-icon {
        grid-row: 1 / 2;
        grid-column: 2 / 3;
        justify-self: center;
      }

      .title {
        margin-block-start: map.get(variables.$spacers, 5);
      }
    }
  }

  &.vertical {
    flex-direction: column;
    block-size: 100%;
    padding-block-start: map.get(variables.$spacers, 9);

    min-inline-size: $wizard-vertical-min-inline-size;
    max-inline-size: $wizard-vertical-max-inline-size;

    .step {
      grid-template-columns: 24px 1fr;
      grid-template-rows: auto auto auto;

      align-items: center;
      flex: 0 1 auto;

      .step-icon {
        grid-row: 2 / 3;
        grid-column: 1 / 2;
        justify-self: center;
      }

      .title {
        grid-row: 2 / 3;
        grid-column: 2 / 3;
        padding-inline-start: map.get(variables.$spacers, 4);
      }
    }
  }

  .completed-color {
    color: variables.$element-text-inverse;
  }
}

.line {
  grid-row: 1;
  justify-self: stretch;

  &.vertical {
    grid-column: 1 / 2;
    align-self: stretch;
    justify-self: center;
    border-inline-start-color: $wizard-default-border-color;
    border-inline-start-width: 2px;
    border-inline-start-style: solid;
    min-block-size: map.get(variables.$spacers, 5);

    &.dashed {
      border-inline-start-style: dashed;
    }

    &.spacer {
      block-size: map.get(variables.$spacers, 5);
      border: 0;
    }

    &:not(.previous) {
      grid-row: 3;
    }
  }

  &:not(.vertical) {
    grid-column: 3 / 4;
    border-block-start-width: 2px;
    border-block-start-style: solid;
    border-block-start-color: $wizard-default-border-color;
    align-self: center;

    &.previous {
      grid-column: 1 / 2;
    }

    &.dashed {
      inline-size: map.get(variables.$spacers, 9);
      border-block-start-style: dashed;
    }

    &.spacer {
      display: none;
    }

    &.dashed.previous {
      justify-self: end;
    }
  }

  &.active,
  &.completed {
    border-color: $wizard-active-color;
  }

  &.dashed {
    &.vertical {
      min-block-size: map.get(variables.$spacers, 5);
      inline-size: auto;
    }
  }
}

.step {
  inline-size: 100%;
  flex-shrink: 1;

  a {
    display: grid;
    grid-template-columns: subgrid;
    grid-template-rows: subgrid;
    grid-row: 1 / -1;
    grid-column: 1 / -1;
    align-items: center;
    justify-self: center;
    color: $wizard-default-border-color;

    &:hover {
      text-decoration: none;
    }

    &:focus-visible {
      .step-icon {
        @include variables.make-outline-focus-inside();
        border-radius: 12px;

        &.number-step {
          outline: none;

          .circle {
            @include variables.make-outline-focus();
          }
        }
      }
    }
  }

  .title {
    grid-row: 2 / 3;
    grid-column: 1 / -1;
    color: $wizard-default-color;

    display: -webkit-box;
    overflow: hidden;
    line-clamp: 2;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
  }

  .active,
  .active .title {
    color: $wizard-active-color;
    cursor: default;
  }

  .disabled,
  .disabled:hover,
  a.disabled > * {
    cursor: default;

    .title {
      color: variables.$element-text-disabled;
    }

    .step-icon {
      color: variables.$element-ui-3;
    }
  }

  a:not(.disabled):hover {
    &,
    .step-icon,
    .title {
      color: $wizard-hover-color !important; // stylelint-disable-line declaration-no-important
    }
  }

  .completed {
    .title {
      color: variables.$element-text-primary;
    }

    .step-icon {
      color: variables.$element-ui-0;
    }

    .circle {
      background-color: currentColor;
    }
  }
}

.container-wizard {
  inline-size: 100%;
  display: flex;
  flex-wrap: nowrap;

  &:not(.vertical) {
    justify-content: center;
    padding-block-end: map.get(variables.$spacers, 6);
  }

  &.vertical {
    justify-content: start;
    block-size: 100%;

    .steps-content {
      flex: 100%;
      padding-inline-start: map.get(variables.$spacers, 6);
    }
  }

  .vertical-divider {
    border-inline-end: 1px solid $wizard-vertical-divider-border-color;
    margin-block: -(map.get(variables.$spacers, 6));
  }
}

.center-save {
  display: flex;
  justify-content: center;
  padding-block-start: map.get(variables.$spacers, 6);
}

.wizard-btn-container {
  max-inline-size: 50px;
  min-inline-size: 40px;
  text-align: center;
  cursor: pointer;

  &.wizard-text-deactivate:hover {
    cursor: default;
  }

  &:not(.wizard-text-deactivate):hover .text-primary {
    color: $wizard-hover-color !important; // stylelint-disable-line declaration-no-important
  }
}

.completion-icon-size {
  font-size: 96px;
}

.circle {
  min-inline-size: 18px;
  min-block-size: 18px;
  border-radius: 9px;
  border-width: 1px;
  border-style: solid;
  border-color: currentColor;
  color: currentColor;
}

.number-step {
  min-inline-size: 24px;
  min-block-size: 24px;
}

.wizard-footer {
  container-type: inline-size;
}

.wizard-footer-inner {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: start;
  gap: map.get(variables.$spacers, 6);

  > .end {
    margin-inline-start: auto;
  }
}
@container (max-width: 400px) {
  .wizard-footer-inner {
    flex-direction: column;
    align-items: stretch;

    > .end {
      margin-inline-start: unset;
    }
  }
}
